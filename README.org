* Vagrant sinatra with proxy example

This is a simple Vagrant configuration that works behind our corporate
proxy.

It shows how to install rvm + ruby and mysql server in the shell
provisioning phase of =vagrant up=.

The [[file:./vagrant/][./vagrant]] directory contains the provisioning shell scripts.

** Usage

*** Host: Start vagrant

#+begin_src sh
vagrant up
#+end_src

The Vagrantfile will detect whether you're behind a proxy by testing
whether the =https_proxy= environment variable exists. If it does exist,
the instance will be configured to use the same proxy. If not, the
proxy setting code is bypassed.

If you change networks, you can reconfigure with:

#+begin_src sh
vagrant reload --provision
#+end_src

*** Host: Shell into vagrant guest instance

#+begin_src sh
vagrant ssh
#+end_src

*** Guest: Start sinatra app

#+begin_src sh
vagrant@vagrant-ubuntu-trusty-64:~$ cd /vagrant
vagrant@vagrant-ubuntu-trusty-64:/vagrant$ bundle
vagrant@vagrant-ubuntu-trusty-64:/vagrant$ bin/app.rb
#+end_src

*** Host: Test app

On the host, browse to http://127.0.0.1:8000

You should see the text:

: [{"id":1,"name":"Rick"},{"id":2,"name":"Morty"}]

** Mysql configuration

The Vagrantfile defines the following environment variables used by
the mysql installation and ActiveRecord (in [[file:bin/app.rb][bin/app.rb]]).

| Var                 | Example   |
|---------------------+-----------|
| MYSQL_ROOT_PASSWORD | root123   |
| MYSQL_APP_HOST      | localhost |
| MYSQL_APP_DB        | appdb     |
| MYSQL_APP_USERNAME  | appuser   |
| MYSQL_APP_PASSWORD  | user123   |
